//------Generated by the Framework and can be changed-----//
//------Sample of DB Entity------//

package br.ufc.frameworkkotlin.model.dao.repository.EntityRepositoriesSamples

import android.annotation.SuppressLint
import android.content.ContentValues
import android.content.Context
import br.ufc.frameworkkotlin.model.dao.repository.Repository
import br.ufc.frameworkkotlin.model.dao.DBEntities.Pessoa
import br.ufc.frameworkkotlin.model.dao.interfaces.IPessoaRepository

class PessoaRepository(val context: Context ): Repository(context,TABLENAME, lstCols), IPessoaRepository {

    override fun setContentValues() { }

    companion object {
        private val TABLENAME = "Pessoa"
        private val lstCols:MutableList<Triple<String, String,Boolean>>? =
            mutableListOf(Triple("Nome", "TEXT", true))
    }

    override fun Add(pessoa: Pessoa){
        val values = ContentValues().apply { put("Nome", pessoa.nome) }
        super.Add(values)
    }

    @SuppressLint("Range")
    override fun GetPersonById(id: Int): Pessoa {
        val cursor = super.GetById(id)
        cursor?.moveToFirst()
        val pessoa = Pessoa()
        pessoa.id = cursor!!.getInt(cursor!!.getColumnIndex("id"))
        pessoa.nome = cursor!!.getString(cursor!!.getColumnIndex("Nome"))
        return pessoa
    }

    @SuppressLint("Range")
    override fun getAll(): MutableList<Pessoa> {
        val cursor = super.GetAll()
        val pessoas = mutableListOf<Pessoa>()
        while(cursor!!.moveToNext()){
            val pessoa = Pessoa()
            pessoa.id = cursor!!.getInt(cursor!!.getColumnIndex("id"))
            pessoa.nome = cursor!!.getString(cursor!!.getColumnIndex("Nome"))
            pessoas.add(pessoa)
        }
        return pessoas
    }


}